#ifndef GLOBALS_H
#define GLOBALS_H

#include "TT.h"

int hashsize;
struct position posstack[1024];
int posstackend;
U64 nodesSearched;
U64 currenthash;
struct TTtable TT;
struct ETTtable ETT;
int numinstantbetacutoffs;
int numbetacutoffs;
int hashsize;
struct move killers[128][2];
int history[2][64][64];
int butterfly[2][64][64];
struct move pvArray[1024];
int rootdepth;
int wtime, btime;
int origwtime, origbtime;
int lastsearchdepth;
struct move movestack[1024];
int movestackend;
struct move countermoves[64][64];
U64 hashstack[1024];
int hashstackend;
int seldepth;
int lastreduce;
U64 BBkingLookup[64];
U64 BBknightLookup[64];
U64 BBpasserLookup[2][64];
U64 BBkingfillLookup2[64];
U64 BBkingfillLookup3[64];
U64 BBkingfillLookup4[64];
U64 BBpawnshieldLookup[2][64];
U64 BBinbetweenLookup[64][64];
//const U64 pawnAttacksLookup[2][64] = { // defined in movegen.c
//		{0x200, 0x500, 0xa00, 0x1400, 0x2800, 0x5000, 0xa000, 0x4000, 0x20000, 0x50000, 0xa0000, 0x140000, 0x280000, 0x500000, 0xa00000, 0x400000, 0x2000000, 0x5000000, 0xa000000, 0x14000000, 0x28000000, 0x50000000, 0xa0000000, 0x40000000, 0x200000000, 0x500000000, 0xa00000000, 0x1400000000, 0x2800000000, 0x5000000000, 0xa000000000, 0x4000000000, 0x20000000000, 0x50000000000, 0xa0000000000, 0x140000000000, 0x280000000000, 0x500000000000, 0xa00000000000, 0x400000000000, 0x2000000000000, 0x5000000000000, 0xa000000000000, 0x14000000000000, 0x28000000000000, 0x50000000000000, 0xa0000000000000, 0x40000000000000, 0x200000000000000, 0x500000000000000, 0xa00000000000000, 0x1400000000000000, 0x2800000000000000, 0x5000000000000000, 0xa000000000000000, 0x4000000000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
//		{0, 0, 0, 0, 0, 0, 0, 0, 0x2, 0x5, 0xa, 0x14, 0x28, 0x50, 0xa0, 0x40, 0x200, 0x500, 0xa00, 0x1400, 0x2800, 0x5000, 0xa000, 0x4000, 0x20000, 0x50000, 0xa0000, 0x140000, 0x280000, 0x500000, 0xa00000, 0x400000, 0x2000000, 0x5000000, 0xa000000, 0x14000000, 0x28000000, 0x50000000, 0xa0000000, 0x40000000, 0x200000000, 0x500000000, 0xa00000000, 0x1400000000, 0x2800000000, 0x5000000000, 0xa000000000, 0x4000000000, 0x20000000000, 0x50000000000, 0xa0000000000, 0x140000000000, 0x280000000000, 0x500000000000, 0xa00000000000, 0x400000000000, 0x2000000000000, 0x5000000000000, 0xa000000000000, 0x14000000000000, 0x28000000000000, 0x50000000000000, 0xa0000000000000, 0x40000000000000}
//	};


#endif